// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.112.0/containers/ruby-2-rails-5
{
	"name": "Ruby 2 Rails",
	"dockerFile": "Dockerfile",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": "/bin/bash"
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"rebornix.Ruby",
		"castwide.solargraph"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		3000
	],
	"mounts": [
		// This is a cache file for development temp files that should persist between 
		// container rebuilds. E.g. this will keep you from having to wait a billion years
		// for bundler to rebuild binary Rubygems.
		// Docker will generate it if it doesn't already exist. Probably.
		"type=volume,source=sixmilebridgecache,target=/devcache",
		// You need a .netrc that lets you log in to heroku.
		// If you don't have ~/.netrc there, create an empty file.
		// Then, within this container, run 'heroku login'
		"type=bind,source=${localEnv:HOME}${localEnv:USERPROFILE}/.netrc,target=/root/.netrc"
	],
	"containerEnv": {
		// store zillions of gems on the volume
		"GEM_HOME": "/devcache/gems",
		// also bundler, do your things here
		"BUNDLE_USER_CACHE": "/devcache/bundle",
		// edit commit messages in VSCode
		"VISUAL": "code -w"
	},
	"remoteEnv": {
		"PATH": "/devcache/gems/bin:${containerEnv:PATH}"
	},
	// Use 'postCreateCommand' to run commands after the container is created.
	"postCreateCommand": "echo \"alias gs='git status'\" >> /root/.bashrc"
	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}